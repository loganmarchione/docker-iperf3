---
env:
  global:
    - USER=loganmarchione
    - REPO=docker-iperf3
    - VERSION=$(cat VERSION)

services:
  - docker

jobs:
  include:
    - stage: Build Ubuntu
      env:
        - BASE=ubuntu

      script:
        # Build the container
        - docker build --file ${BASE}/Dockerfile --tag ${USER}/${REPO}:${VERSION} .

        # Test if the container runs, then if iperf is installed successfully
        - docker run --name test-container --detach --publish '5201:5201' ${USER}/${REPO}:${VERSION}
        - sleep 10
        - docker ps -a
        - docker exec --tty test-container /bin/sh -c "which iperf3 && iperf3 --version"

      after_success:
        # Login to DockerHub
        - echo "$DOCKER_HUB_PASS" | docker login -u "$DOCKER_HUB_USER" --password-stdin

        # Image with numbered tag
        - docker tag ${USER}/${REPO}:${VERSION} ${USER}/${REPO}:${VERSION}
        - docker push ${USER}/${REPO}:${VERSION}

        # Image with latest tag
        - docker tag ${USER}/${REPO}:${VERSION} ${USER}/${REPO}:latest
        - docker push ${USER}/${REPO}:latest

    - stage: Build Alpine
      env:
        - BASE=alpine

      script:
        # Build the container
        - docker build --file ${BASE}/Dockerfile --tag ${USER}/${REPO}:${VERSION}-${BASE} .

        # Test if the container runs, then if iperf is installed successfully
        - docker run --name test-container --detach --publish '5201:5201' ${USER}/${REPO}:${VERSION}-${BASE}
        - sleep 10
        - docker ps -a
        - docker exec --tty test-container /bin/sh -c "which iperf3 && iperf3 --version"

      after_success:
        # Login to DockerHub
        - echo "$DOCKER_HUB_PASS" | docker login -u "$DOCKER_HUB_USER" --password-stdin

        # Image with numbered tag
        - docker tag ${USER}/${REPO}:${VERSION}-${BASE} ${USER}/${REPO}:${VERSION}-${BASE}
        - docker push ${USER}/${REPO}:${VERSION}-${BASE}

        # Image with latest tag
        - docker tag ${USER}/${REPO}:${VERSION}-${BASE} ${USER}/${REPO}:latest-${BASE}
        - docker push ${USER}/${REPO}:latest-${BASE}