name: Test

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  schedule:
    - cron: "0 5 * * 0"

env:
  USER: loganmarchione
  REPO: docker-iperf3

jobs:
  ubuntu_ci:
    name: Build and test (Ubuntu base)

    runs-on: ubuntu-latest
    env:
      BASE_DIR: ubuntu

    steps:
    - name: Check out the codebase
      uses: actions/checkout@v2

    - name: Set variables
      run: |
        VER=$(cat VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        push: false
        context: .
        file: ${{ env.BASE_DIR }}/Dockerfile
        load: true
        tags: |
          ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}
          ${{ env.USER }}/${{ env.REPO }}:latest

    - name: Test image
      run: |
        docker images
        docker run --name test-container --detach --publish '5201:5201' ${USER}/${REPO}:${VERSION}
        docker ps -a
        docker exec --tty test-container /bin/sh -c "which iperf3 && iperf3 --version"

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASS }}
        logout: true

  ubuntu_cd:
    name: Deploy (Ubuntu base)

    needs: ubuntu_ci
    runs-on: ubuntu-latest
    env:
      BASE_DIR: ubuntu

    steps:
    - name: Check out the codebase
      uses: actions/checkout@v2

    - name: Set variables
      run: |
        VER=$(cat VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASS }}
        logout: true

    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: ${{ env.BASE_DIR }}/Dockerfile
        tags: |
          ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}
          ${{ env.USER }}/${{ env.REPO }}:latest

  alpine_ci:
    name: Build and test (Alpine base)

    runs-on: ubuntu-latest
    env:
      BASE_DIR: alpine

    steps:
    - name: Check out the codebase
      uses: actions/checkout@v2

    - name: Set variables
      run: |
        VER=$(cat VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        push: false
        context: .
        file: ${{ env.BASE_DIR }}/Dockerfile
        load: true
        tags: |
          ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}-${{ env.BASE_DIR }}
          ${{ env.USER }}/${{ env.REPO }}:latest-${{ env.BASE_DIR }}

    - name: Test image
      run: |
        docker images
        docker run --name test-container --detach --publish '5201:5201' ${USER}/${REPO}:${VERSION}-${{ env.BASE_DIR }}
        docker ps -a
        docker exec --tty test-container /bin/sh -c "which iperf3 && iperf3 --version"

  alpine_cd:
    name: Deploy (Alpine base)

    needs: alpine_ci
    runs-on: ubuntu-latest
    env:
      BASE_DIR: alpine

    steps:
    - name: Check out the codebase
      uses: actions/checkout@v2

    - name: Set variables
      run: |
        VER=$(cat VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASS }}
        logout: true

    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: ${{ env.BASE_DIR }}/Dockerfile
        tags: |
          ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}-${{ env.BASE_DIR }}
          ${{ env.USER }}/${{ env.REPO }}:latest-${{ env.BASE_DIR }}
