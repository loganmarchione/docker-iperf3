name: CI/CD

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  schedule:
    - cron: "0 5 * * 0"
  workflow_dispatch:

env:
  USER: loganmarchione
  REPO: docker-iperf3
    # See https://github.com/goodwithtech/dockle/issues/188
  DOCKLE_HOST: "unix:///var/run/docker.sock"

jobs:
  alpine_ci:
    name: Build and test

    runs-on: ubuntu-latest

    steps:
    - name: Check out the codebase
      uses: actions/checkout@v3

    - name: Set variables
      run: |
        VER=$(cat VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker Image
      uses: docker/build-push-action@v3
      with:
        push: false
        context: .
        file: Dockerfile
        load: true
        tags: |
          ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}
          ${{ env.USER }}/${{ env.REPO }}:latest

    - name: Test image
      run: |
        docker images
        docker run --name test-container --detach --publish '5201:5201' ${USER}/${REPO}:${VERSION}
        docker ps -a
        docker exec --tty test-container /bin/sh -c "which iperf3 && iperf3 --version"

    - name: Container scan
      uses: azure/container-scan@v0
      with:
        image-name: ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}
        severity-threshold: CRITICAL
        run-quality-checks: true

  alpine_cd:
    name: Deploy

    needs: alpine_ci
    runs-on: ubuntu-latest

    steps:
    - name: Check out the codebase
      uses: actions/checkout@v3

    - name: Set variables
      run: |
        VER=$(cat VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASS }}
        logout: true

    - name: Build Docker Image
      uses: docker/build-push-action@v3
      with:
        push: true
        context: .
        file: Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        tags: |
          ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}
          ${{ env.USER }}/${{ env.REPO }}:latest
